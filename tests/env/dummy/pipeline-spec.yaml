pipeline-test-stream-remote-resources-nones:
  pipeline:
    -
      run: add_metadata
      parameters:
        name: test_nulls
    - 
      run: add_resource
      parameters:
        name: nulls-test
        url: https://ams3.digitaloceanspaces.com/budgetkey-files/spending-reports/2017-4-%D7%9E%D7%A9%D7%A8%D7%93%20%D7%94%D7%97%D7%A7%D7%9C%D7%90%D7%95%D7%AA%20%D7%95%D7%A4%D7%99%D7%AA%D7%95%D7%97%20%D7%94%D7%9B%D7%A4%D7%A8-%D7%9E%D7%A9%D7%A8%D7%93%20%D7%94%D7%97%D7%9C%D7%A7%D7%90%D7%95%D7%AA%20%D7%95%D7%AA%D7%A0%D7%95%D7%A4%D7%94-2018-02-19-7b8a.xlsx
        sheet: 1
        constants:
          a-number: 5
          a-string: number
          a-bool: no
    - 
      run: stream_remote_resources
    -
      run: set_types
      parameters:
       types:
        a-number:
          constraints:
            required: true
            min-value: 5
        a-string:
          constraints:
            required: true
        a-bool:
          constraints:
            required: true
    -
      run: dump.to_path
      parameters:
        out-path: nulls-test

pipeline-test-basic:
  pipeline:
    -
      run: add_metadata
      parameters:
        name: 'al-treasury-spending'
        title: 'Albania Treasury Service'
        granularity: transactional
        countryCode: AL
        homepage: 'http://spending.data.al/en/treasuryservice/list/year/2014/inst_code/1005001'
    -
      run: add_resource
      parameters:
        name: "treasury"
        url: "https://raw.githubusercontent.com/openspending/fiscal-data-package-demos/master/al-treasury-spending/data/treasury.csv"
        schema:
          fields:
            -
              name: "Budget Institution"
              type: string
            -
              name: "Supplier"
              type: string
            -
              name: "Treasury Branch"
              type: string
            -
              name: "Value"
              type: number
            -
              name: "Date registered"
              type: date
            -
              name: "Date executed"
              type: date
            -
              name: "Receipt No"
              type: string
            -
              name: "Kategori Shpenzimi"
              type: string
            -
              name: "Receipt Description"
              type: string
    -
      run: stream_remote_resources
    -
      run: pipeline-test-supplier-titleize
      parameters:
        key: Supplier
    -
      run: ..extract-year
      parameters:
         from-key: "Date executed"
         to-key: "Year"
    -
      run: ..common.pipeline-common
    -
      run: dump.to_zip
      parameters:
          out-file: dump.zip


pipeline-test-big-outputs:
  pipeline:
    - run: big-outputs
    - run: big-outputs


pipeline-test-hooks:
  pipeline:
    -
      run: add_metadata
      parameters:
        name: 'hook-tests'
    -
      run: add_resource
      parameters:
        name: "treasury"
        url: "https://raw.githubusercontent.com/openspending/fiscal-data-package-demos/master/al-treasury-spending/data/treasury.csv"
    -
      run: dump.to_path
      parameters:
          out-path: hooks-outputs

  hooks:
    - http://localhost:9000/update

pipeline-test-datatypes:
  pipeline:
    -
      run: add_metadata
      parameters:
        name: 'type-tests'
    -
      run: add_resource
      parameters:
        name: types
        url: types.csv
    -
      run: stream_remote_resources
    -
      run: set_types
      parameters:
        types:
          string:
            type: string
          number:
            type: number
          integer:
            type: integer
          boolean:
            type: boolean
          object:
            type: object
          array:
            type: array
          date:
            type: date
          datetime:
            type: datetime
          time:
            type: time
          year:
            type: year
          yearmonth:
            type: yearmonth
          duration:
            type: duration
          geopoint:
            type: geopoint
          geojson:
            type: geojson
    -
      run: dump.to_path
      parameters:
          out-path: type-tests-output

pipeline-test-datatypes2:
  dependencies:
    - pipeline: ./tests/env/dummy/pipeline-test-datatypes
  pipeline:
    -
      run: add_metadata
      parameters:
        name: 'type-tests'
    -
      run: load_resource
      parameters:        
        url: dependency://./tests/env/dummy/pipeline-test-datatypes
        resource: types
    -
      run: dump.to_path
      parameters:
          out-path: type-tests-output2

pipeline-test-code:
  dependencies:
    - pipeline: ./tests/env/dummy/pipeline-test-datatypes
  pipeline:
  -
      run: load_resource
      parameters:
        url: dependency://./tests/env/dummy/pipeline-test-datatypes
        resource: types
  -
    run: code
    code: |
      from datapackage_pipelines.wrapper import ingest, spew
      parameters, datapackage, resources, stats = tuple(ingest()) + ({},)
      def get_resource():
        for descriptor, resource in zip(datapackage["resources"], resources):
          for row in resource:
            yield row
      spew(datapackage, [get_resource()], stats)
  -
    run: dump.to_path
    parameters:
      out-path: code-test-output
